escreva("--------------------------------");
escreva("Testes Internos - Linguagem Egua");
escreva("--------------------------------");
escreva("|");

var erros = 0;

funcao startTest(){
  escreva(tSeSenao());
  escreva("|");
  escreva(tEnquanto());
  escreva("|");
  escreva(tPara());
  escreva("|");
  escreva(tFacaEnquanto());
  escreva("|");
  escreva(tCasoEscolha());
  escreva("|");
  escreva(tTentePegue());
  escreva("|");
  escreva(tClasse());
}

funcao tSeSenao(){
  escreva("-------------------------");
  escreva("Iniciando Teste: Se - Se Não");
  escreva("-------------------------");
  var a = 1;
  var b = 1;
  se (a == b)
    retorna("Se - Se não: OK!");
  senao {
    erros = erros + 1;
    retorna("Se - Se não: ERRO!");
  }
}

funcao tEnquanto(){
  escreva("------------------------");
  escreva("Iniciando Teste: Enquanto");
  escreva("------------------------");
  var a = 0;
  enquanto(a<5){
    a = a + 1;
  }
  se (a == 5)
    retorna("Enquanto: OK!");
  senao {
    erros = erros + 1;
    retorna("Enquanto: ERRO!");
  }
  escreva(a);
}

funcao tPara(){
  escreva("--------------------");
  escreva("Iniciando Teste: Para");
  escreva("--------------------");
  var a = 0;
  para (var i = 0; i < 5; i = i + 1) {
  a = a + 1;
  }
  se (a == 5)
    retorna("Para: OK!");
  senao {
    erros = erros + 1;
    retorna("Para: ERRO!");
  }
}

funcao tFacaEnquanto(){
  escreva("-----------------------------");
  escreva("Iniciando Teste: Faça - Enquanto");
  escreva("-----------------------------");
  var a = 0;
  fazer {
    a = a + 1;
  } enquanto(a<5){
  }
  se (a == 5)
    retorna("Faça - Enquanto: OK!");
  senao {
    erros = erros + 1;
    retorna("Faça - Enquanto: ERRO!");
  }
}

funcao tCasoEscolha(){
  escreva("--------------------");
  escreva("Iniciando Teste: Caso - Escolha");
  escreva("--------------------");
  escolha(1){
    caso 1: 
    retorna("Caso - Escolha: OK!");  
    caso 2:
    retorna("Caso - Escolha: ERRO!");
  }
}

funcao tTentePegue(){
  escreva("--------------------");
  escreva("Iniciando Teste: Tente - Pegue");
  escreva("--------------------");
  tente {
  1 > "1";
  escreva("Tente - Pegue: ERRO!");
  } pegue {
  escreva("Tente - Pegue: OK!");
  } finalmente {
  retorna(" ");  
  }
}

funcao tClasse(){
  escreva("--------------------");
  escreva("Iniciando Teste: Classe");
  escreva("--------------------");
  tente{
  classe Animal {
    correr() {
      escreva("Correndo Loucamente");
    }
  }
  classe Cachorro herda Animal {
    latir() {
      escreva("Au Au Au Au");
    }
  }
  var nomeDoCachorro = Cachorro();
  nomeDoCachorro.correr();
  nomeDoCachorro.latir();
  escreva("Classe: OK!");
  } pegue {
  escreva("Classe: ERRO!");  
  } finalmente {
  retorna(" ");
  }
}

startTest();
escreva("----------------------------");
escreva("Teste terminado com " + texto(erros) + " erro(s)!");
escreva("----------------------------");
